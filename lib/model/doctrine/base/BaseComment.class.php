<?php

/**
 * BaseComment
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $username
 * @property integer $file_id
 * @property integer $root_id
 * @property string $message
 * @property File $File
 * 
 * @method string  getUsername() Returns the current record's "username" value
 * @method integer getFileId()   Returns the current record's "file_id" value
 * @method integer getRootId()   Returns the current record's "root_id" value
 * @method string  getMessage()  Returns the current record's "message" value
 * @method File    getFile()     Returns the current record's "File" value
 * @method Comment setUsername() Sets the current record's "username" value
 * @method Comment setFileId()   Sets the current record's "file_id" value
 * @method Comment setRootId()   Sets the current record's "root_id" value
 * @method Comment setMessage()  Sets the current record's "message" value
 * @method Comment setFile()     Sets the current record's "File" value
 * 
 * @package    www
 * @subpackage model
 * @author     Dziamid Zayankouski
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
abstract class BaseComment extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('comment');
        $this->hasColumn('username', 'string', 30, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 30,
             ));
        $this->hasColumn('file_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('root_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('message', 'string', 1020, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 1020,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('File', array(
             'local' => 'file_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $nestedset0 = new Doctrine_Template_NestedSet(array(
             'hasManyRoots' => true,
             ));
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($nestedset0);
        $this->actAs($timestampable0);
    }
}