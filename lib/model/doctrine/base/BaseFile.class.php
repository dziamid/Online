<?php

/**
 * BaseFile
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property integer $user_id
 * @property boolean $is_public
 * @property sfGuardUser $User
 * @property Doctrine_Collection $Comments
 * 
 * @method string              getName()      Returns the current record's "name" value
 * @method integer             getUserId()    Returns the current record's "user_id" value
 * @method boolean             getIsPublic()  Returns the current record's "is_public" value
 * @method sfGuardUser         getUser()      Returns the current record's "User" value
 * @method Doctrine_Collection getComments()  Returns the current record's "Comments" collection
 * @method File                setName()      Sets the current record's "name" value
 * @method File                setUserId()    Sets the current record's "user_id" value
 * @method File                setIsPublic()  Sets the current record's "is_public" value
 * @method File                setUser()      Sets the current record's "User" value
 * @method File                setComments()  Sets the current record's "Comments" collection
 * 
 * @package    www
 * @subpackage model
 * @author     Dziamid Zayankouski
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
abstract class BaseFile extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('file');
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('is_public', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser as User', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('Comment as Comments', array(
             'local' => 'id',
             'foreign' => 'file_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}